{"remainingRequest":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Mike/Documents/GitHub/happy-vue/happy-vue/src/views/notifications/Modals.vue?vue&type=template&id=47b205e0&","dependencies":[{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/src/views/notifications/Modals.vue","mtime":1576852206662},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}