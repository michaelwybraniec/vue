{"remainingRequest":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Mike/Documents/GitHub/happy-vue/happy-vue/src/containers/TheSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/src/containers/TheSidebar.vue","mtime":1576857868541},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBuYXYgZnJvbSAnLi9fbmF2JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUaGVTaWRlYmFyJywKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIG1pbmltaXplOiBmYWxzZSwKICAgICAgbmF2LAogICAgICBzaG93OiAncmVzcG9uc2l2ZScKICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy4kcm9vdC4kb24oJ3RvZ2dsZS1zaWRlYmFyJywgKCkgPT4gewogICAgICBjb25zdCBzaWRlYmFyT3BlbmVkID0gdGhpcy5zaG93ID09PSB0cnVlIHx8IHRoaXMuc2hvdyA9PT0gJ3Jlc3BvbnNpdmUnCiAgICAgIHRoaXMuc2hvdyA9IHNpZGViYXJPcGVuZWQgPyBmYWxzZSA6ICdyZXNwb25zaXZlJwogICAgfSkKICAgIHRoaXMuJHJvb3QuJG9uKCd0b2dnbGUtc2lkZWJhci1tb2JpbGUnLCAoKSA9PiB7CiAgICAgIGNvbnN0IHNpZGViYXJDbG9zZWQgPSB0aGlzLnNob3cgPT09ICdyZXNwb25zaXZlJyB8fCB0aGlzLnNob3cgPT09IGZhbHNlCiAgICAgIHRoaXMuc2hvdyA9IHNpZGViYXJDbG9zZWQgPyB0cnVlIDogJ3Jlc3BvbnNpdmUnCiAgICB9KQogIH0KfQo="},{"version":3,"sources":["TheSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TheSidebar.vue","sourceRoot":"src/containers","sourcesContent":["<template>\n  <CSidebar\n    fixed\n    :minimize=\"minimize\"\n    :show.sync=\"show\"\n  >\n    <CSidebarBrand\n      :imgFull=\"{ width: 30, height: 30, alt: 'Logo', src: 'img/happy/logo.png'}\"\n      :imgMinimized=\"{ width: 30, height: 30, alt: 'Logo', src: 'img/happy/logo.png'}\"\n      :wrappedInLink=\"{ href: '/#/dashboard', target: '_blank'}\"\n      :test=\"text\"\n    />\n    <CRenderFunction flat :content-to-render=\"nav\"/>\n    <CSidebarMinimizer\n      class=\"d-md-down-none\"\n      @click.native=\"minimize = !minimize\"\n    />\n  </CSidebar>\n</template>\n\n<script>\nimport nav from './_nav'\n\nexport default {\n  name: 'TheSidebar',\n  data () {\n    return {\n      minimize: false,\n      nav,\n      show: 'responsive'\n    }\n  },\n  mounted () {\n    this.$root.$on('toggle-sidebar', () => {\n      const sidebarOpened = this.show === true || this.show === 'responsive'\n      this.show = sidebarOpened ? false : 'responsive'\n    })\n    this.$root.$on('toggle-sidebar-mobile', () => {\n      const sidebarClosed = this.show === 'responsive' || this.show === false\n      this.show = sidebarClosed ? true : 'responsive'\n    })\n  }\n}\n</script>\n"]}]}