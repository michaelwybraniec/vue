{"remainingRequest":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Mike/Documents/GitHub/happy-vue/happy-vue/src/views/base/Forms.vue?vue&type=template&id=93bb5058&","dependencies":[{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/src/views/base/Forms.vue","mtime":1576852206654},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Mike/Documents/GitHub/happy-vue/happy-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}